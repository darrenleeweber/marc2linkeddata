# https://github.com/bkeepers/dotenv is used for
# default configuration options.  The values in
# this file do not replace existing values in
# the shell ENV, but these settings will be in
# effect when the shell ENV doesn't contain them.
# To add these settings to the shell ENV, use
# $ source .env
# To override individual settings in this file, just
# set them in the shell ENV before running a script.

# Uncomment and set values as required.  See used settings in
# lib/marc2linkeddata/configuration.rb

export DEBUG=false

export LOG_FILE='marc2ld.log'
export LIB_PREFIX=http://linked-data.example.org/library/

# Without any options enabled to GET_* via HTTP, the process
# is largely file IO bound, rather than CPU bound.  In this
# case, threading decreases performance.  However, when any
# GET_* options are enabled for retrieval of RDF over HTTP,
# threading may improve performance.
export THREADS=false

# Authority record field numbers for useful link data
export FIELD_AUTH_LOC=920
export FIELD_AUTH_VIAF=921
export FIELD_AUTH_ISNI=922
export FIELD_AUTH_OCLC=035

# Options for retrieving linked data to resolve and enhance data.
# Set all false for the quickest translation.  Note that having an
# LOC identifier (MARC record number may be sufficient), is usually
# a prelude to getting additional linked data.  If any of these are
# enabled, it may require GET_LOC=true to have greater success.
export GET_LOC=false
export GET_ISNI=false
export GET_OCLC=false
export GET_VIAF=false

# Using OCLC identity, retrieve RDF for creative works?
# Only works when GET_OCLC==true; it can slow processing significantly.
export OCLC_AUTH2WORKS=false

# Use FOAF or SCHEMA or both
export USE_FOAF=false
export USE_SCHEMA=true

# Local triple store for LOC authority data,
# accessed via an HTTP API with basic authentication.
# See downloads at http://id.loc.gov/download/
export LOCAL_LOC_USER='sparqlUser'
export LOCAL_LOC_PASS='sparqlPass'
export LOCAL_LOC_HOST='dev-sparql.example.org'
export LOCAL_LOC_PORT='80'
export LOCAL_LOC_PATH='/sparql?'

# SUL-CAP resources
# May require ssh port forwarding, e.g.:
# ssh ${USER}@cap-mysql-host.example.com -L 3308:localhost:3306 -N &
export SUL_CAP_ENABLED=false
export SUL_CAP_DB_HOST=localhost
export SUL_CAP_DB_PORT=3306
export SUL_CAP_DB_USER=capUser
export SUL_CAP_DB_PASSWORD=capPass
export SUL_CAP_DB_DATABASE=cap

# Redis Persistence - based on https://github.com/redis/redis-rb
# - essential options:
#   export REDIS4MARC=true # enable redis persistence (default = false)
# - supplementary options:
#   Set the REDIS_URL for a custom redis configuration.
#   export REDIS_URL="redis://{user}:{password}@{host}:{port}/{db}"
#   export REDIS_READ=true  # enable redis reads  (default = REDIS4MARC || false)
#                           # faster reading of triples from pre-populated redis data
#   export REDIS_WRITE=true # enable redis writes (default = REDIS4MARC || false)
#                           # current data is updated in redis
export REDIS4MARC=false
# Uncomment these options to disable read or write (independently)
#export REDIS_READ=false
#export REDIS_WRITE=false
# Leave commented to use default redis configs on localhost
#export REDIS_URL=localhost


